{"name":"Hypersistence2.0","tagline":"PHP Object Oriented persistence framework.","body":"Hypersistence2.0\r\n================\r\n\r\nPHP Object Orented persistence framework.\r\n\r\n-----------------------------------------\r\n\r\nUse doc comment tags for mapping classes with database.\r\n\r\n<h3>Example:</h3>\r\n\r\n```php\r\n\r\n/**\r\n * @table(person)\r\n */\r\nclass Person extends Hypersistence{\r\n    \r\n    /**\r\n     * @primaryKey\r\n     * @column(person_id)\r\n     */\r\n    private $id;\r\n    \r\n    /**\r\n     * Use empty column when the column has the same name that var.\r\n     * @column()\r\n     */\r\n    private $name;\r\n    \r\n    /**\r\n     * When you have a Many to One relationship use tags as below.\r\n     * You can use 'lazy' or 'eager'.\r\n     * @manyToOne(lazy)\r\n     * @column(city_id)\r\n     * @itemClass(City)\r\n     */\r\n    private $city;\r\n    \r\n    /**\r\n     * When you have a One to Many relationship use tags as below.\r\n     * You can use 'lazy' or 'eager'.\r\n     * @oneToMany(lazy)\r\n     * @joinColumn(person_id)\r\n     * @itemClass(Book)\r\n     */\r\n    private $books;\r\n    \r\n    /**\r\n     * When you have a Many to Many relationship use tags as below.\r\n     * You can use 'lazy' or 'eager'.\r\n     * @manyToMany(lazy)\r\n     * @joinColumn(person_id)\r\n     * @inverseJoinColumn(course_id)\r\n     * @itemClass(Course)\r\n     * @joinTable(person_has_course)\r\n     */\r\n    private $courses;\r\n    \r\n\r\n    public function getId(){\r\n        return $this->id;\r\n    }\r\n    \r\n    public function setId($id){\r\n        $this->id = $id;\r\n    }\r\n    \r\n    public function getName(){\r\n        return $this->name;\r\n    }\r\n    \r\n    public function setName($name){\r\n        $this->name = $name;\r\n    }\r\n    \r\n    public function getCity(){\r\n        return $this->city;\r\n    }\r\n    \r\n    public function setCity($city){\r\n        $this->city = $city;\r\n    }\r\n    \r\n    public function getBooks(){\r\n        return $this->books;\r\n    }\r\n    \r\n    public function getCourses(){\r\n        return $this->courses;\r\n    }\r\n}\r\n\r\n```\r\n\r\n\r\n<h3>Load Example:</h3>\r\n\r\n```php\r\n\r\n$p = new Person();\r\n$p->setId(1);\r\n$p->load();\r\n\r\necho $p->getName();\r\n\r\n```\r\n\r\n<h3>Save Example:</h3>\r\n\r\n```php\r\n\r\n$p = new Person();\r\n$p->setName('Mateus Fornari');\r\n$city = new City(1);\r\n$city->load();\r\n$p->setCity($city);\r\n$p->save();\r\n\r\n```\r\n\r\n<h3>Search Example:</h3>\r\n\r\n```php\r\n\r\n$p = new Person();\r\n$p->setName('Mateus');\r\n\r\n$search = $p->search();\r\n$search->orderBy('name', 'asc');\r\n$search->orderBy('city.name', 'desc');\r\n\r\n$list = $search->execute();\r\n```\r\n","google":"UA-53286002-1","note":"Don't delete this file! It's used internally to help with page regeneration."}